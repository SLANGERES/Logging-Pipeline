services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5673:5672"
      - "15673:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=changeme
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
      
  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy

  go-service:
    build:
      context: ./go-service
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    ports:
      - "9090:9090"
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  python-service:
    build:
      context: ./python-service
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.1
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5044:5044"   # Beats input
      - "5001:5000"   # TCP/UDP input (changed from 5000 to avoid macOS conflict)
      - "9600:9600"   # Logstash monitoring API
